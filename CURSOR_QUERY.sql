-- Create the Products table

CREATE TABLE Products(
 Product_id INT PRIMARY KEY,
 Product_Name VARCHAR(250) NOT NULL,
 Price DECIMAL(10, 2) NOT NULL
);

-- Insert data into the Products table

INSERT INTO Products (Product_id, Product_Name, Price) VALUES
(1, 'Smartphone', 35000), 
(2, 'Laptop', 65000),
(3, 'Headphones', 5500),
(4, 'Television', 85000),
(5, 'Gaming Console', 32000);

CREATE TABLE NewProducts (
 Product_id INT PRIMARY KEY,
 Product_Name VARCHAR(250) NOT NULL,
 Price DECIMAL(10, 2) NOT NULL
);

CREATE TABLE ArchivedProducts (
 Product_id INT PRIMARY KEY,
 Product_Name VARCHAR(250) NOT NULL,
 Price DECIMAL(10, 2) NOT NULL
);

--Part - A

--1. Create a cursor Product_Cursor to fetch all the rows from a products table.

DECLARE @PID INT,@PNAME VARCHAR(20),@PRICE DECIMAL(8,2)

DECLARE CR_PRODUCTS CURSOR FOR
	SELECT Product_id,Product_Name,Price FROM Products
OPEN CR_PRODUCTS
FETCH NEXT FROM CR_PRODUCTS INTO
	@PID,@PNAME,@PRICE
WHILE @@FETCH_STATUS = 0
	BEGIN
		PRINT CAST(@PID AS VARCHAR(10)) + ' ' + @PNAME + ' ' + CAST(@PRICE AS VARCHAR(10))
		FETCH NEXT FROM CR_PRODUCTS INTO @PID,@PNAME,@PRICE
	END
CLOSE CR_PRODUCTS
DEALLOCATE CR_PRODUCTS

--2. Create a cursor Product_Cursor_Fetch to fetch the records in form of ProductID_ProductName.
--(Example: 1_Smartphone)

DECLARE @PRID INT,@PRNAME VARCHAR(200)

DECLARE PRODUCT_CURSOR_FETCH CURSOR FOR
	SELECT Product_id,Product_Name FROM Products
OPEN PRODUCT_CURSOR_FETCH
FETCH NEXT FROM PRODUCT_CURSOR_FETCH INTO
	@PRID,@PRNAME
WHILE @@FETCH_STATUS = 0
	BEGIN
		PRINT CAST(@PRID AS VARCHAR(10)) + '_' + @PRNAME
		FETCH NEXT FROM PRODUCT_CURSOR_FETCH INTO @PRID,@PRNAME
	END
CLOSE PRODUCT_CURSOR_FETCH 
DEALLOCATE PRODUCT_CURSOR_FETCH 


--3. Create a Cursor to Find and Display Products Above Price 30,000.

DECLARE @PROID INT,@PRONAME VARCHAR(20),@PRI DECIMAL(8,2)

DECLARE DISPLAY_CURSOR_PRICE CURSOR FOR
	SELECT Product_id,Product_Name,Price FROM Products WHERE Price > 30000
OPEN DISPLAY_CURSOR_PRICE
FETCH NEXT FROM DISPLAY_CURSOR_PRICE INTO
	@PROID,@PRONAME,@PRI
WHILE @@FETCH_STATUS = 0
	BEGIN
		PRINT CAST(@PROID AS VARCHAR(10)) + ' - ' + @PRONAME + ' - ' + CAST(@PRI AS VARCHAR(10))
		FETCH NEXT FROM DISPLAY_CURSOR_PRICE INTO @PROID,@PRONAME,@PRI
	END
CLOSE DISPLAY_CURSOR_PRICE
DEALLOCATE DISPLAY_CURSOR_PRICE


--4. Create a cursor Product_CursorDelete that deletes all the data from the Products table.

DECLARE @PRODUCTID INT

DECLARE PRODUCT_CURSOR_DELETE CURSOR FOR
	 SELECT Product_id FROM Products
OPEN PRODUCT_CURSOR_DELETE 
FETCH NEXT FROM PRODUCT_CURSOR_DELETE INTO @PRODUCTID
WHILE @@FETCH_STATUS = 0
	BEGIN
		DELETE FROM Products WHERE Product_id = @PRODUCTID
		FETCH NEXT FROM PRODUCT_CURSOR_DELETE INTO @PRODUCTID
	END
CLOSE PRODUCT_CURSOR_DELETE 
DEALLOCATE PRODUCT_CURSOR_DELETE 

SELECT * FROM Products


--Part – B

--5. Create a cursor Product_CursorUpdate that retrieves all the data from the products table and increases
--the price by 10%.

DECLARE @PRO_ID INT,@PRO_NAME VARCHAR(20),@PRO_PRICE DECIMAL(8,2)

DECLARE PRODUCT_CURSOR_UPDATE CURSOR FOR
	SELECT Product_id,Product_Name,Price FROM Products
OPEN PRODUCT_CURSOR_UPDATE
FETCH NEXT FROM PRODUCT_CURSOR_UPDATE INTO @PRO_ID,@PRO_NAME,@PRO_PRICE
WHILE @@FETCH_STATUS = 0
	BEGIN
		UPDATE Products
		SET Price = @PRO_PRICE*0.01
		WHERE Product_id = @PRO_ID
	    FETCH NEXT FROM PRODUCT_CURSOR_UPDATE INTO @PRO_ID, @PRO_NAME, @PRO_PRICE;
	END
CLOSE PRODUCT_CURSOR_UPDATE 
DEALLOCATE PRODUCT_CURSOR_UPDATE 

SELECT * FROM Products

--6. Create a Cursor to Rounds the price of each product to the nearest whole number.

DECLARE @PROD_ID INT,@PROD_NAME VARCHAR(20),@PROD_PRICE DECIMAL(8,2)

DECLARE CURSOR_ROUND_PRICE CURSOR FOR
	SELECT Product_id,Product_Name,Price FROM Products
OPEN CURSOR_ROUND_PRICE
FETCH NEXT FROM CURSOR_ROUND_PRICE INTO @PROD_ID,@PROD_NAME,@PROD_PRICE
WHILE @@FETCH_STATUS = 0
	BEGIN
		UPDATE Products
		SET Price = ROUND(@PROD_ID,0)
		WHERE Product_id = @PROD_ID
		FETCH NEXT FROM CURSOR_ROUND_PRICE INTO @PROD_ID,@PROD_NAME,@PROD_PRICE
	END
CLOSE CURSOR_ROUND_PRICE
DEALLOCATE CURSOR_ROUND_PRICE

SELECT * FROM Products

--Part – C

--7. Create a cursor to insert details of Products into the NewProducts table if the product is “Laptop”
--(Note: Create NewProducts table first with same fields as Products table)

SELECT * FROM NewProducts

DECLARE @PRODUC_ID INT,@PRODUC_NAME VARCHAR(20),@PRODUC_PRICE DECIMAL(8,2)

DECLARE CURSOR_NEW_PRODUCTS CURSOR FOR
	SELECT Product_id,Product_Name,Price FROM Products
OPEN CURSOR_NEW_PRODUCTS
FETCH NEXT FROM CURSOR_NEW_PRODUCTS INTO @PRODUC_ID,@PRODUC_NAME,@PRODUC_PRICE
WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @PRODUC_NAME = 'LAPTOP'
			INSERT INTO NewProducts VALUES(@PRODUC_ID,@PRODUC_NAME,@PRODUC_PRICE)
		FETCH NEXT FROM CURSOR_NEW_PRODUCTS INTO @PRODUC_ID,@PRODUC_NAME,@PRODUC_PRICE
	END
CLOSE CURSOR_NEW_PRODUCTS
DEALLOCATE CURSOR_NEW_PRODUCTS


--8. Create a Cursor to Archive High-Price Products in a New Table (ArchivedProducts), Moves products
--with a price above 50000 to an archive table, removing them from the original Products table.


DECLARE @P_ID INT,@P_NAME VARCHAR(20),@P_PRICE DECIMAL(8,2)

DECLARE CURSOR_HIGH_PRICE_PRODUCT CURSOR FOR
	SELECT Product_id,Product_Name,Price FROM Products
OPEN CURSOR_HIGH_PRICE_PRODUCT
FETCH NEXT FROM CURSOR_HIGH_PRICE_PRODUCT INTO @P_ID,@P_NAME,@P_PRICE
WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @P_PRICE > 50000
			INSERT INTO ArchivedProducts VALUES (@P_ID,@P_NAME,@P_PRICE)
			DELETE FROM Products WHERE Price > 50000
		FETCH NEXT FROM CURSOR_HIGH_PRICE_PRODUCT INTO @P_ID,@P_NAME,@P_PRICE
	END
CLOSE CURSOR_HIGH_PRICE_PRODUCT
DEALLOCATE CURSOR_HIGH_PRICE_PRODUCT

SELECT * FROM ArchivedProducts
